---
import Layout from '~/layouts/PageLayout.astro';
import Header from '~/components/widgets/Header.astro';
import Hero2 from '~/components/widgets/Hero2.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';
import Features3 from '~/components/widgets/Features3.astro';
import Content from '~/components/widgets/Content.astro';
import Testimonials from '~/components/widgets/Testimonials.astro';
import FAQs from '~/components/widgets/FAQs.astro';
import Stats from '~/components/widgets/Stats.astro';
import { headerData } from '~/navigation';

import Button from '~/components/ui/Button.astro';
// Use Astro's built-in Image component
import { Image } from 'astro:assets';

// Import the image paths/references directly
import appStoreImage from '~/assets/images/app-store.png';
import googlePlayImage from '~/assets/images/google-play.png';
import peteyMapImage from '~/assets/images/petey-map-jungle.jpg';
import peteyRaftImage from '~/assets/images/petey-raft.png'; // Uncomment if you plan to use it

const appStoreDownloadLink = 'https://github.com/onwidget/astrowind';
const googlePlayDownloadLink = 'https://github.com/onwidget/astrowind';

// No need for getImage here if using <Image> component directly with the import
// const appStoreImg = await getImage({src: appStoreImage, inferSize: true});
// const googlePlayImg = await getImage({src: googlePlayImage, inferSize: true});
// const peteyMapImg = await getImage({src: peteyMapImage, inferSize: true});
// const peteyRaftImg = await getImage({src: peteyRaftImage, inferSize: true});


const metadata = {
  title: 'The Adventures of Captain Petey',
};
---

<Layout metadata={metadata}>
  <Fragment slot="announcement"></Fragment>
  <Fragment slot="header">
    {/* Header component remains the same */}
    <Header
      position="left"
      links={[
        { text: 'Features', href: '#' },
        { text: 'About', href: '#' },
        { text: 'Blog', href: 'blog' },
      ]}
      actions={[
        {
          text: 'Download',
          href: '#download',
        },
      ]}
      isSticky
      showToggleTheme
    />
  </Fragment>

  <Hero2
    image={{
      // Pass the imported image reference directly to the Astro <Image> component
      // You might need to adjust Hero2 internally if it expects an object like before
      // OR, modify Hero2 to accept an Astro Image component instance via a slot
      // Let's assume Hero2 can render an image passed via props for now:
      // Option A: If Hero2 internally uses <Image> or <img> and just needs src/alt
       src: peteyMapImage, // Pass the import directly
       alt: "Petey Jungle Map"
      // Option B: If Hero2 needs width/height (let <Image> infer it)
      // Pass the component itself via a slot if Hero2 supports it (preferred)
      // OR keep using getImage as you did before for this specific case if Hero2 needs the dimensions upfront
      // For simplicity, let's stick to the getImage approach for Hero2 for now, as it might expect width/height
      // Re-enable getImage for peteyMapImg if Hero2 requires width/height props
      // const peteyMapImg = await getImage({src: peteyMapImage, inferSize: true});
      // image={{
      //  src: peteyMapImg.src, // Use processed src
      //  width: peteyMapImg.width,
      //  height: peteyMapImg.height,
      //  alt: "Petey Jungle Map"
      // }}
      // *** Let's assume Hero2 just needs src/alt for this example ***
    }}
  >
    <Fragment slot="title">
      Help <span class="text-accent dark:text-white highlight">Captain Petey</span> <br /> on his journey
    </Fragment>

    <Fragment slot="subtitle">
      <span class="hidden sm:inline">
        Use your body to keep Petey in shape so he can escape his desert island.
      </span>
      As he evolves, you'll unlock new challenges and adventures.
    </Fragment>

    <div slot="actions" class="flex max-w-sm gap-4">
      <Button variant="link" href={appStoreDownloadLink}>
        {/* Use Astro's Image component directly */}
        <Image src={appStoreImage} alt="App Store Image" loading="eager" inferSize />
      </Button>

      <Button variant="link" href={googlePlayDownloadLink}>
        {/* Use Astro's Image component directly */}
        <Image src={googlePlayImage} alt="Google Play Image" loading="eager" inferSize />
      </Button>
    </div>
  </Hero2>

  <Features3
    id="features"
    title="Let's Help Petey!"
    subtitle="Petey the Capybara got stranded on a desert island and needs help to get in shape so he can resume is adventures. Use your mobile phone's camera to accompany Petey through a series of stretches and other exercises to gear up for adventure."
    tagline="mission 1"
    columns={2}
    items={[
      // ... items
    ]}
    // If Features3 uses an image, apply the same logic as Hero2
    // For example, pass the imported reference if it uses <Image> internally
    // Or use getImage if it needs width/height props
    // image={{ src: peteyRaftImage, alt: 'Captain Petey relaxing on a raft' }}
  />

  <Content
    isReversed
    items={[
      // ... items
    ]}
    image={{
      src: 'https://images.unsplash.com/photo-1576153192621-7a3be10b356e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1674&q=80',
      alt: 'Colorful Image',
    }}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">Main Features</h3>
    </Fragment>
  </Content>

  <Content
    isAfterContent
    items={[
      // ... items
    ]}
    image={{
      src: 'https://images.unsplash.com/photo-1453738773917-9c3eff1db985?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80',
      alt: 'Vintage Image',
    }}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">Other features</h3>
    </Fragment>
  </Content>

  <Stats
    title="Petey's KPIs"
    stats={[
      { amount: '20K', icon: 'tabler:download' },
      { amount: '18.5K', icon: 'tabler:users' },
      { amount: '4.7', icon: 'tabler:user-star' },
    ]}
  />

  <Testimonials
     title="What our users say?"
     testimonials={[
      // ... testimonials
     ]}
     callToAction={{
      target: '_blank',
      text: 'Read more testimonials',
      href: 'https://github.com/onwidget/astrowind',
      icon: 'tabler:chevron-right',
    }}
  />

  <FAQs
    title="Questions for the Captain?"
    items={[
      // ... items
    ]}
  />

  <CallToAction
    id="download"
    title="Download Captain Petey now!"
    subtitle="Use your camera to help Petey get in shape for more adventures."
  >
    <div slot="actions" class="flex max-w-sm gap-4">
      <Button variant="link" href={appStoreDownloadLink}>
         {/* Use Astro's Image component directly */}
         <Image src={appStoreImage} alt="App Store Image" loading="eager" inferSize />
      </Button>

      <Button variant="link" href={googlePlayDownloadLink}>
         {/* Use Astro's Image component directly */}
         <Image src={googlePlayImage} alt="Google Play Image" loading="eager" inferSize />
      </Button>
    </div>
  </CallToAction>
</Layout>